{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","delay","console","log","className","style","animationDelay","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","gif","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAgBvC,OACI,sBAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,aCYhBG,EAjBK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAM/B,OAHAC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,GAGR,sBACIG,UAAU,yCACVC,MAAQ,CAACC,eAAe,GAAD,OAAc,GAARL,EAAN,MAF3B,UAII,qBAAKM,IAAMP,EAAMQ,IAAMT,IACvB,4BAAKA,Q,uBCZJU,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbX,EAFa,iDAEoCY,UAAUF,GAF9C,+DAGAG,MAAMb,GAHN,cAGbc,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,MAAK,CAC1BC,GAAID,EAAIC,GACRpB,IAAKmB,EAAIE,OAAOC,iBAAiBtB,IACjCD,MAAOoB,EAAIpB,UARI,kBAWZkB,GAXY,4CAAH,sDCwBLM,EAvBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EAEZzB,mBAAS,CAC/B+B,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENlB,EAAQC,GACHkB,MAAK,SAAAX,GAEFS,EAAS,CACLV,KAAMC,EACNO,SAAS,SAKtB,CAACd,IAEGe,EDnBwBI,CAAanB,GAA/BO,EAFiB,EAEtBD,KAAWQ,EAFW,EAEXA,QAEnB,OACI,qCACI,6BAAMd,IACN,qBAAKN,UAAU,YAAf,SACKoB,EACG,4CACAP,EAAKC,KAAI,WAAqBY,GAArB,IAAGV,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IAAd,OACT,cAAC,EAAD,CAEID,MAAQA,EACRC,IAAMA,EACNC,MAAQ6B,GAHFV,YEUfW,EArBM,WAAO,IAAD,EAEa9C,mBAAS,CAAC,kBAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,8BACKS,EAAWyB,KAAI,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCX9BsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.86b0c255.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory;","import React from 'react'\n\nconst GifGridItem = ({ title, url, delay }) => {\n\n    //document.querySelector('.card.animate__bounceIn').\n    console.log('delay')\n    console.log(delay)\n\n    return (\n        <div\n            className=\"card animate__animated animate__fadeIn\"\n            style={ {animationDelay: `${ delay * .1 }s`} }\n        >\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;","\n\nexport const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=z0dInkD7qvgcON5S3EAqmp5hziPvYZcv`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(gif => ({\n        id: gif.id,\n        url: gif.images.downsized_medium.url,\n        title: gif.title\n    }));\n\n    return gifs;\n}\n","import GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:gifs, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{ category }</h3>\n            <div className=\"card-grid\">\n                {loading ? (\n                    <h1>Loading...</h1>\n                ) : gifs.map(({ id, title, url }, key) => (\n                    <GifGridItem\n                        key={ id }\n                        title={ title }\n                        url={ url }\n                        delay={ key }\n                    />\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default GifGrid;","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(gifs => {\n                \n                setState({\n                    data: gifs,\n                    loading: false\n                });\n                \n            });\n\n    }, [category]);\n\n    return state;\n\n}","import { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One punch man']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n            <div>\n                {categories.map(category => (\n                    <GifGrid\n                        key={ category }\n                        category={ category }\n                    />\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}